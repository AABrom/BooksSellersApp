# Набор тестов для эндпоинтов которые можно запустить
# в VSCode с помощью плагина  REST Client
# Найти можно по идентификатору: humao.rest-client
# Tunder Client не позволяет свободно импортировать-экспортировать записи,
# поэтому перешел на этот плагин. Он тоже хорош :-)

# Создаем книгу
POST http://localhost:8000/api/v1/books/ HTTP/1.1
Content-Type: application/json

{
    "title": "Clean Architectures",
    "author": " Robert Martin",
    "count_pages": 300,
    "year": 2025, 
    "seller_id" : 29
}

###

# Получаем список книг
GET http://localhost:8000/api/v1/books/ HTTP/1.1

###

# Получаем одну книгу по ее ИД
GET http://localhost:8000/api/v1/books/15 HTTP/1.1

###

# Удаляем книгу
DELETE http://localhost:8000/api/v1/books/15 HTTP/1.1

###

# Обновляем поля в данных о книге
PUT http://localhost:8000/api/v1/books/15 HTTP/1.1
Content-Type: application/json

{
    "id": 5,
    "title": "Clean Code",
    "author": "Robert Martin",
    "year": 2022,
    "pages": 310, 
    "seller_id" : 5
}

###

POST http://localhost:8000/api/v1/sellers/ HTTP/1.1
Content-Type: application/json

{
    "first_name": "Test",
    "last_name": "Testov",
    "e_mail": "test@example.com",
    "password": "tastpassword1456"
    
}

### 
# Получаем список продавцов без их книг
GET http://localhost:8000/api/v1/sellers/


###
#получаем продавца по id
GET http://localhost:8000/api/v1/sellers/28
###

# Обновляем поля в данных о продавце
PUT http://localhost:8000/api/v1/sellers/28 HTTP/1.1
Content-Type: application/json

{
    "first_name": "July",
    "id" : 1,
    "last_name": "Doe",
    "e_mail": "july.doe@example.com",
    "password": "securepassword14", 
    "books" : []
    
}

###
# Удаляем продавца
DELETE http://localhost:8000/api/v1/sellers/28 HTTP/1.1